$date
	Sun Oct 27 01:15:44 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mac_tb $end
$var wire 16 ! out [15:0] $end
$var reg 4 " a [3:0] $end
$var reg 4 # a_q [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 4 % b_q [3:0] $end
$var reg 4 & c [3:0] $end
$var reg 4 ' c_q [3:0] $end
$var reg 1 ( clk $end
$var reg 4 ) d [3:0] $end
$var reg 4 * d_q [3:0] $end
$var reg 16 + expected_out [15:0] $end
$var reg 16 , psum [15:0] $end
$var integer 32 - Aa_dec [31:0] $end
$var integer 32 . Ac_dec [31:0] $end
$var integer 32 / Wb_dec [31:0] $end
$var integer 32 0 Wd_dec [31:0] $end
$var integer 32 1 i [31:0] $end
$var integer 32 2 w_file [31:0] $end
$var integer 32 3 w_scan_file [31:0] $end
$var integer 32 4 x_file [31:0] $end
$var integer 32 5 x_scan_file [31:0] $end
$scope function mac_predicted $end
$var reg 5 6 a [4:0] $end
$var reg 5 7 a_q [4:0] $end
$var reg 4 8 b [3:0] $end
$var reg 4 9 b_q [3:0] $end
$var reg 5 : c [4:0] $end
$var reg 5 ; c_q [4:0] $end
$var reg 4 < d [3:0] $end
$var reg 4 = d_q [3:0] $end
$var reg 16 > mac_predicted [15:0] $end
$var reg 16 ? psum [15:0] $end
$upscope $end
$scope function w_bin $end
$var reg 4 @ w_bin [3:0] $end
$var integer 32 A weight [31:0] $end
$upscope $end
$scope function x_bin $end
$var reg 4 B x_bin [3:0] $end
$var integer 32 C activation [31:0] $end
$upscope $end
$scope module mac_wrapper_instance $end
$var wire 4 D a [3:0] $end
$var wire 4 E b [3:0] $end
$var wire 4 F c [3:0] $end
$var wire 1 ( clk $end
$var wire 4 G d [3:0] $end
$var wire 16 H psum [15:0] $end
$var wire 16 I out [15:0] $end
$var wire 9 J mid [8:0] $end
$var reg 4 K a_q [3:0] $end
$var reg 4 L b_q [3:0] $end
$var reg 4 M c_q [3:0] $end
$var reg 4 N d_q [3:0] $end
$var reg 9 O mid_q [8:0] $end
$scope module acc_instance $end
$var wire 9 P a [8:0] $end
$var wire 16 Q c [15:0] $end
$var wire 16 R out [15:0] $end
$var wire 9 S b [8:0] $end
$upscope $end
$scope module mac_instance $end
$var wire 4 T a [3:0] $end
$var wire 4 U b [3:0] $end
$var wire 4 V c [3:0] $end
$var wire 4 W d [3:0] $end
$var wire 9 X out [8:0] $end
$var wire 5 Y c_ex [4:0] $end
$var wire 5 Z a_ex [4:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0xxxx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
b10000000000000000000000000000100 4
bx 3
b10000000000000000000000000000011 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
b0 +
bx *
bx )
0(
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#2
1(
#3
b0 1
0(
#4
1(
#5
b1001 *
b111 '
b1 %
b110 #
b1 1
b0 ,
b0 H
b0 Q
b1001 )
b1001 G
b111 &
b111 F
b1 $
b1 E
b1001 @
b1 A
b110 "
b110 D
b111 B
b1 C
b111 .
b1 5
b110 -
b11111111111111111111111111111001 0
b1 3
b1 /
0(
#6
b111010101 J
b111010101 S
b111010101 X
b1001 N
b1001 W
b111 Y
b111 M
b111 V
b110 Z
b110 K
b110 T
b1 L
b1 U
1(
#7
b10 1
b1111111111010000 +
b1111111111010000 >
b1 6
b111 8
b11 :
b1100 <
b110 7
b1 9
b111 ;
b1001 =
b0 ?
b1100 )
b1100 G
b11 &
b11 F
b1 C
b111 $
b111 E
b1100 @
b0 A
b1 "
b1 D
b11 B
b11 .
b1 -
b11111111111111111111111111111100 0
b111 /
0(
#8
b1111111111010000 !
b1111111111010000 I
b1111111111010000 R
b111010101 O
b111010101 P
b1100 N
b1100 W
b11 Y
b11 M
b11 V
b1 Z
b1 K
b1 T
b111111011 J
b111111011 S
b111111011 X
b111 L
b111 U
1(
#9
b1110 *
b10 '
b1101 %
b10 #
b11 1
b1111111110100000 !
b1111111110100000 I
b1111111110100000 R
b1111111111010000 ,
b1111111111010000 H
b1111111111010000 Q
b1110 )
b1110 G
b10 &
b10 F
b1101 $
b1101 E
b1110 @
b0 A
b10 "
b10 D
b10 B
b0 C
b10 .
b10 -
b11111111111111111111111111111110 0
b11111111111111111111111111111101 /
0(
#10
b111111011 O
b111111011 P
b1110 N
b1110 W
b10 Y
b10 M
b10 V
b10 Z
b10 K
b10 T
b1111111111000001 !
b1111111111000001 I
b1111111111000001 R
b111110110 J
b111110110 S
b111110110 X
b1101 L
b1101 U
1(
#11
b100 1
b1111111110011110 +
b1111111110011110 >
b1111 6
b1100 8
b100 :
b101 <
b10 7
b1101 9
b10 ;
b1110 =
b1111111111010000 ?
b101 )
b101 G
b100 &
b100 F
b1100 $
b1100 E
b101 @
b1 A
b1111 "
b1111 D
b100 B
b0 C
b100 .
b1111 -
b101 0
b11111111111111111111111111111100 /
0(
#12
b111110110 O
b111110110 P
b101 N
b101 W
b100 Y
b100 M
b100 V
b1111 Z
b1111 K
b1111 T
b1111111110011110 !
b1111111110011110 I
b1111111110011110 R
b111011000 J
b111011000 S
b111011000 X
b1100 L
b1100 U
1(
#13
b100 *
b100 '
b1010 %
b110 #
b101 1
b1111111101101100 !
b1111111101101100 I
b1111111101101100 R
b1111111110011110 ,
b1111111110011110 H
b1111111110011110 Q
b100 )
b100 G
b1010 $
b1010 E
b100 @
b0 A
b110 "
b110 D
b100 B
b0 C
b110 -
b100 0
b11111111111111111111111111111010 /
0(
#14
b111011000 O
b111011000 P
b100 N
b100 W
b110 Z
b110 K
b110 T
b1111111101100010 !
b1111111101100010 I
b1111111101100010 R
b111101100 J
b111101100 S
b111101100 X
b1010 L
b1010 U
1(
#15
b110 1
b1111111110000110 +
b1111111110000110 >
b0 6
b10 8
b10 :
b1110 <
b110 7
b1010 9
b100 ;
b100 =
b1111111110011110 ?
b1110 )
b1110 G
b10 &
b10 F
b0 C
b10 $
b10 E
b1110 @
b0 A
b0 "
b0 D
b10 B
b10 .
b0 -
b11111111111111111111111111111110 0
b10 /
0(
#16
b111101100 O
b111101100 P
b1110 N
b1110 W
b10 Y
b10 M
b10 V
b0 Z
b0 K
b0 T
b1111111110000110 !
b1111111110000110 I
b1111111110000110 R
b111111100 J
b111111100 S
b111111100 X
b10 L
b10 U
1(
#17
b1100 *
b1010 '
b0 %
b1 #
b111 1
b1111111101101110 !
b1111111101101110 I
b1111111101101110 R
b1111111110000110 ,
b1111111110000110 H
b1111111110000110 Q
b1100 )
b1100 G
b0 A
b1010 &
b1010 F
b0 $
b0 E
b1100 @
b1 "
b1 D
b1010 B
b0 C
b1010 .
b1 -
b11111111111111111111111111111100 0
b0 /
0(
#18
b111111100 O
b111111100 P
b1100 N
b1100 W
b1111111110011010 !
b1111111110011010 I
b1111111110011010 R
b11000 J
b11000 S
b11000 X
b11010 Y
b1010 M
b1010 V
b1 Z
b1 K
b1 T
b0 L
b0 U
1(
#19
b1000 1
b1111111101011001 +
b1111111101011001 >
b10 6
b11 8
b1011 :
b1111 <
b1 7
b0 9
b1010 ;
b1100 =
b1111111110000110 ?
b1111 )
b1111 G
b1011 &
b1011 F
b11 $
b11 E
b1111 @
b1 A
b10 "
b10 D
b1011 B
b1 C
b1011 .
b10 -
b11111111111111111111111111111111 0
b11 /
0(
#20
b11000 O
b11000 P
b1111 N
b1111 W
b11011 Y
b1011 M
b1011 V
b10 Z
b10 K
b10 T
b1111111110101001 !
b1111111110101001 I
b1111111110101001 R
b1011 J
b1011 S
b1011 X
b11 L
b11 U
1(
#21
b101 *
b110 '
b1100 %
b10 #
b1001 1
b1111111101111100 !
b1111111101111100 I
b1111111101111100 R
b1111111101011001 ,
b1111111101011001 H
b1111111101011001 Q
b101 )
b101 G
b110 &
b110 F
b1100 $
b1100 E
b101 @
b1 A
b110 B
b0 C
b110 .
b101 0
b11111111111111111111111111111100 /
0(
#22
b1011 O
b1011 P
b101 N
b101 W
b110 Y
b110 M
b110 V
b1111111101111010 !
b1111111101111010 I
b1111111101111010 R
b10110 J
b10110 S
b10110 X
b1100 L
b1100 U
1(
#23
b1010 1
b1111111101111111 +
b1111111101111111 >
b100 6
b1010 8
b1010 :
b100 <
b10 7
b1100 9
b110 ;
b101 =
b1111111101011001 ?
b100 )
b100 G
b1010 &
b1010 F
b1010 $
b1010 E
b100 @
b0 A
b100 "
b100 D
b1010 B
b0 C
b1010 .
b100 -
b100 0
b11111111111111111111111111111010 /
0(
#24
b10110 O
b10110 P
b100 N
b100 W
b11010 Y
b1010 M
b1010 V
b100 Z
b100 K
b100 T
b1111111100111111 !
b1111111100111111 I
b1111111100111111 R
b111010000 J
b111010000 S
b111010000 X
b1010 L
b1010 U
1(
#25
0(
#35
